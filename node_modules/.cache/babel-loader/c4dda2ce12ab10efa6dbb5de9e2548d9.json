{"ast":null,"code":"var _jsxFileName = \"/Users/andrei/SublimeWorkspace/final-project-globo-gym/src/components/SignIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport './SignIn.css';\nimport axios, { AxiosResponse, AxiosError } from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SignIn(props) {\n  _s();\n\n  const [Username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState();\n\n  function validateForm() {\n    return Username.length > 0 && password.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const response = await axios.post(\"/api/users/authenticate\", {\n      \"username\": Username,\n      \"password\": password\n    }).then(response => {\n      setUser(response.data);\n      console.log(response.data);\n      localStorage.setItem('globobikes_username', response.data[\"user_name\"]);\n      localStorage.setItem('globobikes_id', response.data[\"_id\"]);\n    }).catch(reason => {\n      console.log(reason.response.status); //handle error some how : error message?\n    });\n  }\n\n  if (props.signedIn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Signin\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"Username\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          autoFocus: true,\n          type: \"Username\",\n          value: Username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        block: true,\n        size: \"lg\",\n        type: \"submit\",\n        disabled: !validateForm(),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignIn, \"KG+mUWJYCwBgp6v3xyb7ZqB17vk=\");\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/andrei/SublimeWorkspace/final-project-globo-gym/src/components/SignIn.js"],"names":["React","useState","Form","Button","axios","AxiosResponse","AxiosError","SignIn","props","Username","setUsername","password","setPassword","user","setUser","validateForm","length","handleSubmit","event","preventDefault","response","post","then","data","console","log","localStorage","setItem","catch","reason","status","signedIn","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState} from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport './SignIn.css';\nimport axios, {AxiosResponse, AxiosError} from \"axios\";\n\nfunction SignIn(props) {\n  const [Username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState();\n\n  function validateForm() {\n    return Username.length > 0 && password.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const response = await axios.post(\n        \"/api/users/authenticate\",\n        {\n          \"username\" : Username,\n          \"password\" : password\n        }\n    ).then((response) => {\n      setUser(response.data);\n      console.log(response.data);\n      localStorage.setItem('globobikes_username', response.data[\"user_name\"]);\n      localStorage.setItem('globobikes_id', response.data[\"_id\"]);\n    }).catch((reason) => {\n      console.log(reason.response.status);\n      //handle error some how : error message?\n    });\n\n  }\n  if (props.signedIn){\n    return <div></div>;\n  }\n  return (\n    <div className=\"Signin\">\n      <Form onSubmit={handleSubmit}>\n        <Form.Group size=\"lg\" controlId=\"Username\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"Username\"\n            value={Username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group size=\"lg\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\n          Login\n        </Button>\n      </Form>\n    </div>\n  );\n}\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}