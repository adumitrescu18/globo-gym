{"ast":null,"code":"import _classCallCheck from\"/Users/andrei/SublimeWorkspace/final-project-globo-gym/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/andrei/SublimeWorkspace/final-project-globo-gym/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/andrei/SublimeWorkspace/final-project-globo-gym/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/andrei/SublimeWorkspace/final-project-globo-gym/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{Marker,Map,GoogleApiWrapper,StandaloneSearchBox}from\"google-maps-react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var MapContainer=/*#__PURE__*/function(_Component){_inherits(MapContainer,_Component);var _super=_createSuper(MapContainer);function MapContainer(props){var _this;_classCallCheck(this,MapContainer);_this=_super.call(this,props);_this.onMapReady=function(mapProps,map){var directionsService=new _this.props.google.maps.DirectionsService();var directionsDisplay=new _this.props.google.maps.DirectionsRenderer();directionsDisplay.setMap(map);var startOfRoute={lat:_this.state.coords[0].lat,lng:_this.state.coords[0].lng};var endOfRoute={lat:_this.state.coords[_this.state.coords.length-1].lat,lng:_this.state.coords[_this.state.coords.length-1].lng};var request={origin:startOfRoute,waypoints:_this.state.waypoints,destination:endOfRoute,travelMode:\"BICYCLING\"};directionsService.route(request,function(result,status){if(status==\"OK\"){directionsDisplay.setDirections(result);}});var startContainer=document.getElementById(\"start-of-route-container\");var start=document.getElementById(\"start-of-route\");var endContainer=document.getElementById(\"end-of-route-container\");var end=document.getElementById(\"end-of-route\");map.controls[_this.props.google.maps.ControlPosition.TOP_LEFT].push(startContainer);map.controls[_this.props.google.maps.ControlPosition.TOP_RIGHT].push(endContainer);var autocompleteStart=new _this.props.google.maps.places.Autocomplete(start);var autocompleteEnd=new _this.props.google.maps.places.Autocomplete(end);autocompleteStart.bindTo(\"bounds\",map);autocompleteEnd.bindTo(\"bounds\",map);autocompleteStart.setFields([\"address_components\",\"geometry\",\"icon\",\"name\"]);autocompleteEnd.setFields([\"address_components\",\"geometry\",\"icon\",\"name\"]);//listener for the places input\nautocompleteStart.addListener(\"place_changed\",function(){var place=autocompleteStart.getPlace();if(!place.geometry){window.alert(\"No Address Available For: '\"+place.name+\"'\");return;}_this.state.coords[0]={lat:place.geometry.location.lat(),lng:place.geometry.location.lng()};request={origin:_this.state.coords[0],waypoints:_this.state.waypoints,destination:_this.state.coords[1],travelMode:\"BICYCLING\"};var tempwaypoints=[_this.state.coords[0],_this.state.coords[1]];var serverParams={\"creator\":\"Andrei\",\"waypoints\":tempwaypoints,\"description\":\"daily walk\"};console.log(_this.state.waypoints);var serverRequest={method:\"POST\",headers:{'Content-Type':'application/json'},body:JSON.stringify(serverParams)};//creating new directions request\nif(_this.state.coords[0]!==null&&_this.state.coords[1]!==null){directionsService.route(request,function(result,status){if(status==\"OK\"){directionsDisplay.setDirections(result);}});var response;fetch(\"http://localhost:8080/api/routes\",serverRequest).then(function(response){return response=response.json();}).then(function(data){return console.log(data);});};});autocompleteEnd.addListener(\"place_changed\",function(){var place=autocompleteEnd.getPlace();if(!place.geometry){window.alert(\"No Address Available For: '\"+place.name+\"'\");return;}_this.state.coords[1]={lat:place.geometry.location.lat(),lng:place.geometry.location.lng()};request={origin:_this.state.coords[0],waypoints:_this.state.waypoints,destination:_this.state.coords[1],travelMode:\"BICYCLING\"};var tempWaypoints=[_this.state.coords[0],_this.state.coords[1]];var serverParams={\"creator\":\"Andrei\",\"waypoints\":tempWaypoints,\"description\":\"daily walk\"};var serverRequest={method:\"POST\",headers:{'Content-Type':'application/json'},body:JSON.stringify(serverParams)};//creating new directions request\nif(_this.state.coords[0]!==null&&_this.state.coords[1]!==null){directionsService.route(request,function(result,status){if(status==\"OK\"){directionsDisplay.setDirections(result);}});fetch(\"http://localhost:8080/api/routes\",serverRequest).then(function(response){return response.json();}).then(function(data){return console.log(\"andrei\",data);});}});};_this.state={coords:[{name:\"Noah\",title:\"Noah!\",lat:42.356276,lng:-71.096876,id:1},{name:\"Andrei\",title:\"Andrei\",lat:42.348310,lng:-71.081311,id:3}],waypoints:[]};return _this;}_createClass(MapContainer,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"form\",{className:\"nav-bar-address\",id:\"start-of-route-container\",children:[/*#__PURE__*/_jsx(\"button\",{class:\"btn btn-outline-success my-2 my-sm-0\",type:\"submit\",style:{height:\"50px\"},children:\"From\"}),/*#__PURE__*/_jsx(\"input\",{class:\"form-control mr-sm-2\",id:\"start-of-route\",type:\"search\",placeholder:\"Address\",\"aria-label\":\"Search\",style:{height:\"50px\",width:\"500px\"}})]}),/*#__PURE__*/_jsxs(\"form\",{className:\"nav-bar-address\",id:\"end-of-route-container\",children:[/*#__PURE__*/_jsx(\"button\",{class:\"btn btn-outline-success my-2 my-sm-0\",type:\"submit\",style:{height:\"50px\"},children:\"To\"}),/*#__PURE__*/_jsx(\"input\",{class:\"form-control mr-sm-2\",id:\"end-of-route\",type:\"search\",placeholder:\"Address\",\"aria-label\":\"Search\",style:{height:\"50px\",width:\"500px\"}})]}),/*#__PURE__*/_jsx(Map,{className:\"map\",initialCenter:{lat:14.6091,lng:121.0223},google:this.props.google,onClick:this.onMapClick,onReady:this.onMapReady,style:{width:\"85%\",height:\"100%\",position:\"fixed\"},containerStyle:{position:\"fixed\",width:\"100%\",height:\"100%\",marginTop:\"0vh\"},zoom:7}),/*#__PURE__*/_jsx(\"div\",{style:{width:500,height:500},id:this.props.id}),/*#__PURE__*/_jsxs(\"div\",{id:\"infowindow-content\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"\",width:\"16\",height:\"16\",id:\"place-icon\"}),/*#__PURE__*/_jsx(\"span\",{id:\"place-name\",className:\"title\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"span\",{id:\"place-address\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"span\",{id:\"place-coord\"})]})]});}}]);return MapContainer;}(Component);export default GoogleApiWrapper({apiKey:'AIzaSyBAVWVu8_U0FfwgBiHVN3q-G5uCQNBAj7Y'})(MapContainer);","map":{"version":3,"sources":["/Users/andrei/SublimeWorkspace/final-project-globo-gym/src/components/MapContainer.js"],"names":["React","Component","Marker","Map","GoogleApiWrapper","StandaloneSearchBox","MapContainer","props","onMapReady","mapProps","map","directionsService","google","maps","DirectionsService","directionsDisplay","DirectionsRenderer","setMap","startOfRoute","lat","state","coords","lng","endOfRoute","length","request","origin","waypoints","destination","travelMode","route","result","status","setDirections","startContainer","document","getElementById","start","endContainer","end","controls","ControlPosition","TOP_LEFT","push","TOP_RIGHT","autocompleteStart","places","Autocomplete","autocompleteEnd","bindTo","setFields","addListener","place","getPlace","geometry","window","alert","name","location","tempwaypoints","serverParams","console","log","serverRequest","method","headers","body","JSON","stringify","response","fetch","then","json","data","tempWaypoints","title","id","height","width","onMapClick","position","marginTop","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Marker, Map, GoogleApiWrapper, StandaloneSearchBox } from \"google-maps-react\";\n\nexport class MapContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n     coords : [ {\n          name: \"Noah\",\n          title: \"Noah!\",\n          lat: 42.356276,\n          lng: -71.096876,\n          id: 1,\n        },\n        {\n            name: \"Andrei\",\n            title: \"Andrei\",\n            lat: 42.348310,\n            lng: -71.081311,\n            id: 3,\n        },\n      ],\n      waypoints : [],\n    };\n  }\n    onMapReady = (mapProps, map) => {\n      \n      const directionsService = new this.props.google.maps.DirectionsService();\n      const directionsDisplay = new this.props.google.maps.DirectionsRenderer();\n      directionsDisplay.setMap(map);\n      let startOfRoute = { lat:this.state.coords[0].lat, lng:this.state.coords[0].lng };\n      let endOfRoute = {\n        lat: this.state.coords[this.state.coords.length - 1].lat,\n        lng: this.state.coords[this.state.coords.length - 1].lng,\n      };\n  \n      let request = {\n        origin: startOfRoute,\n        waypoints: this.state.waypoints,\n        destination: endOfRoute,\n        travelMode: \"BICYCLING\",\n      };\n\n      directionsService.route(request, function (result, status) {\n        if (status == \"OK\") {\n          directionsDisplay.setDirections(result);\n        }\n      });\n\n      let startContainer = document.getElementById(\"start-of-route-container\");\n      let start = document.getElementById(\"start-of-route\");\n      let endContainer = document.getElementById(\"end-of-route-container\");\n      let end = document.getElementById(\"end-of-route\");\n      map.controls[this.props.google.maps.ControlPosition.TOP_LEFT].push(startContainer);\n      map.controls[this.props.google.maps.ControlPosition.TOP_RIGHT].push(endContainer);\n      let autocompleteStart = new this.props.google.maps.places.Autocomplete(start);\n      let autocompleteEnd = new this.props.google.maps.places.Autocomplete(end);\n      autocompleteStart.bindTo(\"bounds\", map);\n      autocompleteEnd.bindTo(\"bounds\", map);\n      autocompleteStart.setFields([\"address_components\", \"geometry\", \"icon\", \"name\"]);\n      autocompleteEnd.setFields([\"address_components\", \"geometry\", \"icon\", \"name\"]);\n\n      //listener for the places input\n      autocompleteStart.addListener(\"place_changed\", () => {\n        let place = autocompleteStart.getPlace();\n        if (!place.geometry) {\n          window.alert(\"No Address Available For: '\" + place.name + \"'\");\n          return;\n        }\n       this.state.coords[0] = {\n          lat: place.geometry.location.lat(),\n          lng: place.geometry.location.lng(),\n        };\n        \n        request = {\n          origin:this.state.coords[0],\n          waypoints: this.state.waypoints,\n          destination:this.state.coords[1],\n          travelMode: \"BICYCLING\",\n        };\n        const tempwaypoints = [this.state.coords[0], this.state.coords[1]];\n        const serverParams = {\n          \"creator\" : \"Andrei\",\n          \"waypoints\" : tempwaypoints,\n          \"description\" : \"daily walk\"\n\n        }\n        console.log(this.state.waypoints)\n        const serverRequest = {\n          method : \"POST\",\n          headers: { 'Content-Type': 'application/json' },\n          body : JSON.stringify(serverParams)\n\n        }\n        //creating new directions request\n        if (this.state.coords[0] !== null &&this.state.coords[1] !== null) {\n            directionsService.route(request, function (result, status) {\n                if (status == \"OK\") {\n                    directionsDisplay.setDirections(result);\n                }\n            });\n            let response;\n            fetch(\"http://localhost:8080/api/routes\", serverRequest)\n              .then(response => response = response.json())\n              .then(data => console.log(data));\n        };\n      });\n\n      autocompleteEnd.addListener(\"place_changed\", () => {\n        let place = autocompleteEnd.getPlace();\n        if (!place.geometry) {\n          window.alert(\"No Address Available For: '\" + place.name + \"'\");\n          return;\n        }\n       this.state.coords[1] = {\n          lat: place.geometry.location.lat(),\n          lng: place.geometry.location.lng(),\n        };\n        \n        request = {\n          origin:this.state.coords[0],\n          waypoints: this.state.waypoints,\n          destination:this.state.coords[1],\n          travelMode: \"BICYCLING\",\n        };\n        const tempWaypoints = [this.state.coords[0], this.state.coords[1]];\n        const serverParams = {\n          \"creator\" : \"Andrei\",\n          \"waypoints\" : tempWaypoints,\n          \"description\" : \"daily walk\"\n        }\n        const serverRequest = {\n          method : \"POST\",\n          headers: { 'Content-Type': 'application/json' },\n          body : JSON.stringify(serverParams)\n\n        }\n        //creating new directions request\n        if (this.state.coords[0] !== null &&this.state.coords[1] !== null) {\n            directionsService.route(request, function (result, status) {\n                if (status == \"OK\") {\n                    directionsDisplay.setDirections(result);\n                }\n            });\n            fetch(\"http://localhost:8080/api/routes\", serverRequest)\n              .then(response => response.json())\n              .then(data => console.log(\"andrei\", data))\n        }\n      });\n    };\n  \n  \n    render() {\n  \n      return (\n        <div>\n          <form className=\"nav-bar-address\" id=\"start-of-route-container\">\n              <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\" style={{ height: \"50px\"}}>From</button>\n              <input class=\"form-control mr-sm-2\" id=\"start-of-route\" type=\"search\" placeholder=\"Address\" aria-label=\"Search\" style={{height: \"50px\", width: \"500px\"}}></input>\n            </form>\n            <form className=\"nav-bar-address\" id=\"end-of-route-container\">\n              <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\" style={{ height: \"50px\"}}>To</button>\n              <input class=\"form-control mr-sm-2\" id=\"end-of-route\" type=\"search\" placeholder=\"Address\" aria-label=\"Search\" style={{height: \"50px\", width: \"500px\"}}></input>\n          </form>\n          <Map\n            className=\"map\"\n            initialCenter={{ lat: 14.6091, lng: 121.0223 }}\n            google={this.props.google}\n            onClick={this.onMapClick}\n            onReady={this.onMapReady}\n            style={{width: \"85%\", height: \"100%\", position: \"fixed\"}}\n            containerStyle={{position: \"fixed\", width: \"100%\", height:\"100%\", marginTop:\"0vh\"}}\n            zoom={7}\n          >\n          </Map>\n          <div style={{ width: 500, height: 500 }} id={this.props.id} />\n          <div id=\"infowindow-content\">\n            <img src=\"\" width=\"16\" height=\"16\" id=\"place-icon\" />\n            <span id=\"place-name\" className=\"title\"></span>\n            <br />\n            <span id=\"place-address\"></span>\n            <br />\n            <span id=\"place-coord\"></span>\n          </div>\n        </div>\n      );\n    }\n  }\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyBAVWVu8_U0FfwgBiHVN3q-G5uCQNBAj7Y'\n})(MapContainer);"]},"metadata":{},"sourceType":"module"}