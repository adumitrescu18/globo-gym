{"ast":null,"code":"var _jsxFileName = \"/Users/andrei/SublimeWorkspace/final-project-globo-gym/src/components/Autocomplete.js\";\nimport React from 'react';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Autocomplete extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n      value: this.props.address,\n      onChange: this.props.handleChange,\n      onSelect: this.props.handleSelect,\n      children: _ref => {\n        let {\n          getInputProps,\n          suggestions,\n          getSuggestionItemProps,\n          loading\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"40%\",\n            justifyContent: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps({\n              placeholder: 'Search Places ...',\n              className: 'location-search-input',\n              style: {\n                width: \"80%\",\n                justifyContent: \"center\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"autocomplete-dropdown-container\",\n            style: {\n              width: \"80%\",\n              marginLeft: \"10%\",\n              zIndex: 50000\n            },\n            children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 27\n            }, this), suggestions.map(suggestion => {\n              const className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item'; // inline style for demonstration purpose\n\n              const style = suggestion.active ? {\n                backgroundColor: '#c4c4c4',\n                cursor: 'pointer',\n                zIndex: 50000\n              } : {\n                backgroundColor: '#ffffff',\n                cursor: 'pointer'\n              };\n              return /*#__PURE__*/_jsxDEV(\"div\", { ...getSuggestionItemProps(suggestion, {\n                  className,\n                  style\n                }),\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: suggestion.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/andrei/SublimeWorkspace/final-project-globo-gym/src/components/Autocomplete.js"],"names":["React","PlacesAutocomplete","geocodeByAddress","getLatLng","Autocomplete","Component","constructor","props","render","address","handleChange","handleSelect","getInputProps","suggestions","getSuggestionItemProps","loading","width","justifyContent","placeholder","className","style","marginLeft","zIndex","map","suggestion","active","backgroundColor","cursor","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,IACEC,gBADF,EAEEC,SAFF,QAGO,2BAHP;;AAKA,eAAe,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA2C;AACxDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,kBAAD;AACE,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,OADpB;AAEE,MAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG,YAFvB;AAGE,MAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWI,YAHvB;AAAA,gBAKG;AAAA,YAAC;AAAEC,UAAAA,aAAF;AAAiBC,UAAAA,WAAjB;AAA8BC,UAAAA,sBAA9B;AAAsDC,UAAAA;AAAtD,SAAD;AAAA,4BACC;AAAK,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAC,KAAP;AAAcC,YAAAA,cAAc,EAAE;AAA9B,WAAZ;AAAA,kCACE,sBACML,aAAa,CAAC;AAChBM,cAAAA,WAAW,EAAE,mBADG;AAEhBC,cAAAA,SAAS,EAAE,uBAFK;AAGhBC,cAAAA,KAAK,EAAE;AAACJ,gBAAAA,KAAK,EAAE,KAAR;AAAeC,gBAAAA,cAAc,EAAE;AAA/B;AAHS,aAAD;AADnB;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AAAK,YAAA,SAAS,EAAC,iCAAf;AAAiD,YAAA,KAAK,EAAE;AAACD,cAAAA,KAAK,EAAE,KAAR;AAAeK,cAAAA,UAAU,EAAE,KAA3B;AAAkCC,cAAAA,MAAM,EAAE;AAA1C,aAAxD;AAAA,uBACGP,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADd,EAEGF,WAAW,CAACU,GAAZ,CAAgBC,UAAU,IAAI;AAC7B,oBAAML,SAAS,GAAGK,UAAU,CAACC,MAAX,GACd,yBADc,GAEd,iBAFJ,CAD6B,CAI7B;;AACA,oBAAML,KAAK,GAAGI,UAAU,CAACC,MAAX,GACV;AAAEC,gBAAAA,eAAe,EAAE,SAAnB;AAA8BC,gBAAAA,MAAM,EAAE,SAAtC;AAAiDL,gBAAAA,MAAM,EAAE;AAAzD,eADU,GAEV;AAAEI,gBAAAA,eAAe,EAAE,SAAnB;AAA8BC,gBAAAA,MAAM,EAAE;AAAtC,eAFJ;AAGA,kCACE,oBACMb,sBAAsB,CAACU,UAAD,EAAa;AACrCL,kBAAAA,SADqC;AAErCC,kBAAAA;AAFqC,iBAAb,CAD5B;AAAA,uCAME;AAAA,4BAAOI,UAAU,CAACI;AAAlB;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,sBADF;AAUD,aAlBA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD;AAAA;AALH;AAAA;AAAA;AAAA;AAAA,YADF;AAyCD;;AA/CuD","sourcesContent":["import React from 'react';\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-places-autocomplete';\n \nexport default class Autocomplete extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n \n  render() {\n    return (\n      <PlacesAutocomplete\n        value={this.props.address}\n        onChange={this.props.handleChange}\n        onSelect={this.props.handleSelect}\n      >\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n          <div style={{width:\"40%\", justifyContent: \"center\"}}>\n            <input\n              {...getInputProps({\n                placeholder: 'Search Places ...',\n                className: 'location-search-input',\n                style: {width: \"80%\", justifyContent: \"center\"}\n              })}\n            />\n            <div className=\"autocomplete-dropdown-container\" style={{width: \"80%\", marginLeft: \"10%\", zIndex: 50000}}>\n              {loading && <div>Loading...</div>}\n              {suggestions.map(suggestion => {\n                const className = suggestion.active\n                  ? 'suggestion-item--active'\n                  : 'suggestion-item';\n                // inline style for demonstration purpose\n                const style = suggestion.active\n                  ? { backgroundColor: '#c4c4c4', cursor: 'pointer', zIndex: 50000 }\n                  : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                return (\n                  <div\n                    {...getSuggestionItemProps(suggestion, {\n                      className,\n                      style,\n                    })}\n                  >\n                    <span>{suggestion.description}</span>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </PlacesAutocomplete>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}